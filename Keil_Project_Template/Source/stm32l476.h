// stm32l476 low level header file
// No guarantees or claims of suitability,reliability or safety of any kind are implied or given
// All the values below were taken from the STM32L4x6 reference manual (RM0351) and datasheet
// Also include macros for enabling and disabling global interrupts
// Written by Frank Duignan
// stm32l476.h
// Changelog
// First written: November 2016
// Updates on github and eleceng.dit.ie/frank
#ifndef STM32L4_H
#define STM32L4_H

#include <stdint.h>
#define BIT0 (1 << 0)
#define BIT1 (1 << 1)
#define BIT2 (1 << 2)
#define BIT3 (1 << 3)
#define BIT4 (1 << 4)
#define BIT5 (1 << 5)
#define BIT6 (1 << 6)
#define BIT7 (1 << 7)
#define BIT8 (1 << 8)
#define BIT9 (1 << 9)
#define BIT10 (1 << 10)
#define BIT11 (1 << 11)
#define BIT12 (1 << 12)
#define BIT13 (1 << 13)
#define BIT14 (1 << 14)
#define BIT15 (1 << 15)
#define BIT16 (1 << 16)
#define BIT17 (1 << 17)
#define BIT18 (1 << 18)
#define BIT19 (1 << 19)
#define BIT20 (1 << 20)
#define BIT21 (1 << 21)
#define BIT22 (1 << 22)
#define BIT23 (1 << 23)
#define BIT24 (1 << 24)
#define BIT25 (1 << 25)
#define BIT26 (1 << 26)
#define BIT27 (1 << 27)
#define BIT28 (1 << 28)
#define BIT29 (1 << 29)
#define BIT30 (1 << 30)
#define BIT31 (1 << 31)

// Macros to reduce typing later on
#define  REGISTER_32(ADDRESS) (*((volatile uint32_t *)(ADDRESS)))
#define  REGISTER_16(ADDRESS) (*((volatile uint16_t *)(ADDRESS)))
#define  REGISTER_8(ADDRESS) (*((volatile uint8_t *)(ADDRESS)))

// Macros to enable/disable global interrupts
#define enable_interrupts() asm(" cpsie i ")
#define disable_interrupts() asm(" cpsid i ")
#define cpu_sleep() asm(" wfi ")

// Boundary addresses for peripherals
#define DBGMCU_BASE     0xe0042000
#define QUADSPI_BASE    0xa0001000
#define FMC_BASE        0xa0000000
#define RNG_BASE        0x50060800
#define ADC_BASE        0x50040000
#define OTG_FS_BASE     0x50000000
#define GPIOH_BASE	0x48001c00
#define GPIOG_BASE	0x48001800
#define GPIOF_BASE	0x48001400
#define GPIOE_BASE	0x48001000
#define GPIOD_BASE	0x48000c00
#define GPIOC_BASE	0x48000800
#define GPIOB_BASE	0x48000400
#define GPIOA_BASE	0x48000000
#define TSC_BASE        0x40024000
#define CRC_BASE	0x40023000
#define FLASH_BASE	0x40022000
#define RCC_BASE	0x40021000
#define DMA2_BASE	0x40020400
#define DMA1_BASE	0x40020000
#define DFSDM_BASE      0x40016000
#define SAI2_BASE       0x40015800
#define SAI1_BASE       0x40015400
#define TIM17_BASE      0x40014800
#define TIM16_BASE      0x40014400
#define TIM15_BASE      0x40014000
#define USART1_BASE	0x40013800
#define TIM8_BASE       0x40013400
#define SPI1_BASE	0x40013000
#define TIM1_BASE       0x40012c00
#define SDMMC1_BASE     0x40012800
#define FIREWALL_BASE	0x40011c00
#define EXTI_BASE	0x40010400
#define COMP_BASE       0x40010200
#define VREFBUF_BASE    0x40010030
#define SYSCFG_BASE	0x40010000
#define LPTIM2_BASE     0x40009400
#define SWPMI1_BASE     0x40008800
#define LPUART1_BASE    0x40008000
#define LPTIM1_BASE	0x40007c00
#define OPAMP_BASE      0x40007800
#define DAC_BASE        0x40007400
#define PWR_BASE        0x40007000
#define CAN1_BASE       0x40006400
#define I2C3_BASE	0x40005c00
#define I2C2_BASE	0x40005800
#define I2C1_BASE	0x40005400
#define UART5_BASE	0x40005000
#define UART4_BASE	0x40004c00
#define USART3_BASE	0x40004800
#define USART2_BASE	0x40004400
#define SPI3_BASE       0x40003c00
#define SPI2_BASE	0x40003800
#define IWDG_BASE	0x40003000
#define WWDG_BASE	0x40002c00
#define RTC_BASE	0x40002800
#define LCD_BASE        0x40002400
#define TIM7_BASE	0x40001400
#define TIM6_BASE	0x40001000
#define TIM5_BASE	0x40000c00
#define TIM4_BASE	0x40000800
#define TIM3_BASE	0x40000400
#define TIM2_BASE	0x40000000

// Quad SPI registers

#define QUADSPI_CR	REGISTER_32(QUADSPI_BASE + 0x000)
#define QUADSPI_DCR	REGISTER_32(QUADSPI_BASE + 0x004)
#define QUADSPI_SR	REGISTER_32(QUADSPI_BASE + 0x008)
#define QUADSPI_FCR	REGISTER_32(QUADSPI_BASE + 0x00c)
#define QUADSPI_DLR	REGISTER_32(QUADSPI_BASE + 0x010)
#define QUADSPI_CCR	REGISTER_32(QUADSPI_BASE + 0x014)
#define QUADSPI_AR	REGISTER_32(QUADSPI_BASE + 0x018)
#define QUADSPI_ABR	REGISTER_32(QUADSPI_BASE + 0x01c)
#define QUADSPI_DR	REGISTER_32(QUADSPI_BASE + 0x020)
#define QUADSPI_PSMKR	REGISTER_32(QUADSPI_BASE + 0x024)
#define QUADSPI_PSMAR	REGISTER_32(QUADSPI_BASE + 0x028)
#define QUADSPI_PIR	REGISTER_32(QUADSPI_BASE + 0x02c)
#define QUADSPI_LPTR	REGISTER_32(QUADSPI_BASE + 0x030)

// FMC registers
#define FMC_BCR1	REGISTER_32(FMC_BASE + 0x00)
#define FMC_BCR2	REGISTER_32(FMC_BASE + 0x08)
#define FMC_BCR3	REGISTER_32(FMC_BASE + 0x10)
#define FMC_BCR4	REGISTER_32(FMC_BASE + 0x18)
#define FMC_BTR1	REGISTER_32(FMC_BASE + 0x04)
#define FMC_BTR2	REGISTER_32(FMC_BASE + 0x0c)
#define FMC_BTR3	REGISTER_32(FMC_BASE + 0x14)
#define FMC_BTR4	REGISTER_32(FMC_BASE + 0x1c)
#define FMC_BWTR1	REGISTER_32(FMC_BASE + 0x104)
#define FMC_BWTR2	REGISTER_32(FMC_BASE + 0x10c)
#define FMC_BWTR3	REGISTER_32(FMC_BASE + 0x114)
#define FMC_BWTR4	REGISTER_32(FMC_BASE + 0x11c)
#define FMC_PCR	        REGISTER_32(FMC_BASE + 0x80)
#define FMC_SR	        REGISTER_32(FMC_BASE + 0x84)
#define FMC_PMEM	REGISTER_32(FMC_BASE + 0x88)
#define FMC_PATT	REGISTER_32(FMC_BASE + 0x8c)
#define FMC_ECCR	REGISTER_32(FMC_BASE + 0x94)

// RNG (random number generator) registers
#define RNG_CR  	REGISTER_32(RNG_BASE + 0x00)
#define RNG_SR  	REGISTER_32(RNG_BASE + 0x04)
#define RNG_DR  	REGISTER_32(RNG_BASE + 0x08)

// ADC1 
#define ADC1_ISR		REGISTER_32(ADC_BASE + 0x000 + 0)
#define ADC1_IER		REGISTER_32(ADC_BASE + 0x000 + 4)
#define ADC1_CR			REGISTER_32(ADC_BASE + 0x000 + 8)
#define ADC1_CFGR1		REGISTER_32(ADC_BASE + 0x000 + 0x0c)
#define ADC1_SMPR1		REGISTER_32(ADC_BASE + 0x000 + 0x14)
#define ADC1_SMPR2		REGISTER_32(ADC_BASE + 0x000 + 0x18)
#define ADC1_TR1		REGISTER_32(ADC_BASE + 0x000 + 0x20)
#define ADC1_TR2		REGISTER_32(ADC_BASE + 0x000 + 0x24)
#define ADC1_TR3		REGISTER_32(ADC_BASE + 0x000 + 0x28)
#define ADC1_SQR1		REGISTER_32(ADC_BASE + 0x000 + 0x30)
#define ADC1_SQR2		REGISTER_32(ADC_BASE + 0x000 + 0x34)
#define ADC1_SQR3		REGISTER_32(ADC_BASE + 0x000 + 0x38)
#define ADC1_SQR4		REGISTER_32(ADC_BASE + 0x000 + 0x3c)
#define ADC1_DR			REGISTER_32(ADC_BASE + 0x000 + 0x40)
#define ADC1_JSQR		REGISTER_32(ADC_BASE + 0x000 + 0x4c)
#define ADC1_OFR1		REGISTER_32(ADC_BASE + 0x000 + 0x60)
#define ADC1_OFR2		REGISTER_32(ADC_BASE + 0x000 + 0x64)
#define ADC1_OFR3		REGISTER_32(ADC_BASE + 0x000 + 0x68)
#define ADC1_OFR4		REGISTER_32(ADC_BASE + 0x000 + 0x6c)
#define ADC1_JDR1		REGISTER_32(ADC_BASE + 0x000 + 0x80)
#define ADC1_JDR2		REGISTER_32(ADC_BASE + 0x000 + 0x84)
#define ADC1_JDR3		REGISTER_32(ADC_BASE + 0x000 + 0x88)
#define ADC1_JDR4		REGISTER_32(ADC_BASE + 0x000 + 0x8c)
#define ADC1_AWD2CR		REGISTER_32(ADC_BASE + 0x000 + 0xa0)
#define ADC1_AWD3CR		REGISTER_32(ADC_BASE + 0x000 + 0xa4)
#define ADC1_DIFSEL		REGISTER_32(ADC_BASE + 0x000 + 0xb0)
#define ADC1_CALFACT	        REGISTER_32(ADC_BASE + 0x000 + 0xb4)

// ADC2 
#define ADC2_ISR		REGISTER_32(ADC_BASE + 0x100 + 0)
#define ADC2_IER		REGISTER_32(ADC_BASE + 0x100 + 4)
#define ADC2_CR			REGISTER_32(ADC_BASE + 0x100 + 8)
#define ADC2_CFGR1		REGISTER_32(ADC_BASE + 0x100 + 0x0c)
#define ADC2_SMPR1		REGISTER_32(ADC_BASE + 0x100 + 0x14)
#define ADC2_SMPR2		REGISTER_32(ADC_BASE + 0x100 + 0x18)
#define ADC2_TR1		REGISTER_32(ADC_BASE + 0x100 + 0x20)
#define ADC2_TR2		REGISTER_32(ADC_BASE + 0x100 + 0x24)
#define ADC2_TR3		REGISTER_32(ADC_BASE + 0x100 + 0x28)
#define ADC2_SQR1		REGISTER_32(ADC_BASE + 0x100 + 0x30)
#define ADC2_SQR2		REGISTER_32(ADC_BASE + 0x100 + 0x34)
#define ADC2_SQR3		REGISTER_32(ADC_BASE + 0x100 + 0x38)
#define ADC2_SQR4		REGISTER_32(ADC_BASE + 0x100 + 0x3c)
#define ADC2_DR			REGISTER_32(ADC_BASE + 0x100 + 0x40)
#define ADC2_JSQR		REGISTER_32(ADC_BASE + 0x100 + 0x4c)
#define ADC2_OFR1		REGISTER_32(ADC_BASE + 0x100 + 0x60)
#define ADC2_OFR2		REGISTER_32(ADC_BASE + 0x100 + 0x64)
#define ADC2_OFR3		REGISTER_32(ADC_BASE + 0x100 + 0x68)
#define ADC2_OFR4		REGISTER_32(ADC_BASE + 0x100 + 0x6c)
#define ADC2_JDR1		REGISTER_32(ADC_BASE + 0x100 + 0x80)
#define ADC2_JDR2		REGISTER_32(ADC_BASE + 0x100 + 0x84)
#define ADC2_JDR3		REGISTER_32(ADC_BASE + 0x100 + 0x88)
#define ADC2_JDR4		REGISTER_32(ADC_BASE + 0x100 + 0x8c)
#define ADC2_AWD2CR		REGISTER_32(ADC_BASE + 0x100 + 0xa0)
#define ADC2_AWD3CR		REGISTER_32(ADC_BASE + 0x100 + 0xa4)
#define ADC2_DIFSEL		REGISTER_32(ADC_BASE + 0x100 + 0xb0)
#define ADC2_CALFACT	        REGISTER_32(ADC_BASE + 0x100 + 0xb4)



// ADC3 
#define ADC3_ISR		REGISTER_32(ADC_BASE + 0x200 + 0)
#define ADC3_IER		REGISTER_32(ADC_BASE + 0x200 + 4)
#define ADC3_CR			REGISTER_32(ADC_BASE + 0x200 + 8)
#define ADC3_CFGR1		REGISTER_32(ADC_BASE + 0x200 + 0x0c)
#define ADC3_SMPR1		REGISTER_32(ADC_BASE + 0x200 + 0x14)
#define ADC3_SMPR2		REGISTER_32(ADC_BASE + 0x200 + 0x18)
#define ADC3_TR1		REGISTER_32(ADC_BASE + 0x200 + 0x20)
#define ADC3_TR2		REGISTER_32(ADC_BASE + 0x200 + 0x24)
#define ADC3_TR3		REGISTER_32(ADC_BASE + 0x200 + 0x28)
#define ADC3_SQR1		REGISTER_32(ADC_BASE + 0x200 + 0x30)
#define ADC3_SQR2		REGISTER_32(ADC_BASE + 0x200 + 0x34)
#define ADC3_SQR3		REGISTER_32(ADC_BASE + 0x200 + 0x38)
#define ADC3_SQR4		REGISTER_32(ADC_BASE + 0x200 + 0x3c)
#define ADC3_DR			REGISTER_32(ADC_BASE + 0x200 + 0x40)
#define ADC3_JSQR		REGISTER_32(ADC_BASE + 0x200 + 0x4c)
#define ADC3_OFR1		REGISTER_32(ADC_BASE + 0x200 + 0x60)
#define ADC3_OFR2		REGISTER_32(ADC_BASE + 0x200 + 0x64)
#define ADC3_OFR3		REGISTER_32(ADC_BASE + 0x200 + 0x68)
#define ADC3_OFR4		REGISTER_32(ADC_BASE + 0x200 + 0x6c)
#define ADC3_JDR1		REGISTER_32(ADC_BASE + 0x200 + 0x80)
#define ADC3_JDR2		REGISTER_32(ADC_BASE + 0x200 + 0x84)
#define ADC3_JDR3		REGISTER_32(ADC_BASE + 0x200 + 0x88)
#define ADC3_JDR4		REGISTER_32(ADC_BASE + 0x200 + 0x8c)
#define ADC3_AWD2CR		REGISTER_32(ADC_BASE + 0x200 + 0xa0)
#define ADC3_AWD3CR		REGISTER_32(ADC_BASE + 0x200 + 0xa4)
#define ADC3_DIFSEL		REGISTER_32(ADC_BASE + 0x200 + 0xb0)
#define ADC3_CALFACT	        REGISTER_32(ADC_BASE + 0x200 + 0xb4)

// Straying slightly off the naming convention here as these
// registers apply to ADC's 1 and 2
#define ADC12_CSR		REGISTER_32(ADC_BASE +0x300 + 0x00)
#define ADC12_CCR		REGISTER_32(ADC_BASE +0x300 + 0x08)
#define ADC12_CDR		REGISTER_32(ADC_BASE +0x300 + 0x0c)


// TSC
#define TS_CR 		REGISTER_32(TSC_BASE + 0)
#define TSC_IER		REGISTER_32(TSC_BASE + 4)
#define TSC_ICR		REGISTER_32(TSC_BASE + 8)
#define TSC_ISR		REGISTER_32(TSC_BASE + 0x0c)
#define TSC_IOHCR	REGISTER_32(TSC_BASE + 0x10)
#define TSC_IOASCR	REGISTER_32(TSC_BASE + 0x18)
#define TSC_IOSCR	REGISTER_32(TSC_BASE + 0x20)
#define TSC_IOCCR	REGISTER_32(TSC_BASE + 0x28)
#define TSC_IOGCSR	REGISTER_32(TSC_BASE + 0x30)
#define TSC_IOG1CR	REGISTER_32(TSC_BASE + 0x34)
#define TSC_IOG2CR	REGISTER_32(TSC_BASE + 0x38)
#define TSC_IOG3CR	REGISTER_32(TSC_BASE + 0x3c)
#define TSC_IOG4CR	REGISTER_32(TSC_BASE + 0x40)
#define TSC_IOG5CR	REGISTER_32(TSC_BASE + 0x44)
#define TSC_IOG6CR	REGISTER_32(TSC_BASE + 0x48)
#define TSC_IOG7CR	REGISTER_32(TSC_BASE + 0x4c)
#define TSC_IOG8CR	REGISTER_32(TSC_BASE + 0x50)



// GPIO registers 
// PORT A
#define GPIOA_MODER	REGISTER_32(GPIOA_BASE + 0)
#define GPIOA_OTYPER	REGISTER_32(GPIOA_BASE + 4)
#define GPIOA_OSPEEDR	REGISTER_32(GPIOA_BASE + 8)
#define GPIOA_PUPDR	REGISTER_32(GPIOA_BASE + 0x0c)
#define GPIOA_IDR	REGISTER_32(GPIOA_BASE + 0x10)
#define GPIOA_ODR	REGISTER_32(GPIOA_BASE + 0x14)
#define GPIOA_BSRR	REGISTER_32(GPIOA_BASE + 0x18)
#define GPIOA_LCKR	REGISTER_32(GPIOA_BASE + 0x1c)
#define GPIOA_AFRL	REGISTER_32(GPIOA_BASE + 0x20)
#define GPIOA_AFRH	REGISTER_32(GPIOA_BASE + 0x24)
#define GPIOA_BRR	REGISTER_32(GPIOA_BASE + 0x28)
#define GPIOA_ASCR	REGISTER_32(GPIOA_BASE + 0x2c)

// PORT B
#define GPIOB_MODER	REGISTER_32(GPIOB_BASE + 0)
#define GPIOB_OTYPER	REGISTER_32(GPIOB_BASE + 4)
#define GPIOB_OSPEEDR	REGISTER_32(GPIOB_BASE + 8)
#define GPIOB_PUPDR	REGISTER_32(GPIOB_BASE + 0x0c)
#define GPIOB_IDR	REGISTER_32(GPIOB_BASE + 0x10)
#define GPIOB_ODR	REGISTER_32(GPIOB_BASE + 0x14)
#define GPIOB_BSRR	REGISTER_32(GPIOB_BASE + 0x18)
#define GPIOB_LCKR	REGISTER_32(GPIOB_BASE + 0x1c)
#define GPIOB_AFRL	REGISTER_32(GPIOB_BASE + 0x20)
#define GPIOB_AFRH	REGISTER_32(GPIOB_BASE + 0x24)
#define GPIOB_BRR	REGISTER_32(GPIOB_BASE + 0x28)
#define GPIOB_ASCR	REGISTER_32(GPIOB_BASE + 0x2c)

// PORT C
#define GPIOC_MODER	REGISTER_32(GPIOC_BASE + 0)
#define GPIOC_OTYPER	REGISTER_32(GPIOC_BASE + 4)
#define GPIOC_OSPEEDR	REGISTER_32(GPIOC_BASE + 8)
#define GPIOC_PUPDR	REGISTER_32(GPIOC_BASE + 0x0c)
#define GPIOC_IDR	REGISTER_32(GPIOC_BASE + 0x10)
#define GPIOC_ODR	REGISTER_32(GPIOC_BASE + 0x14)
#define GPIOC_BSRR	REGISTER_32(GPIOC_BASE + 0x18)
#define GPIOC_LCKR	REGISTER_32(GPIOC_BASE + 0x1c)
#define GPIOC_AFRL	REGISTER_32(GPIOC_BASE + 0x20)
#define GPIOC_AFRH	REGISTER_32(GPIOC_BASE + 0x24)
#define GPIOC_BRR	REGISTER_32(GPIOC_BASE + 0x28)
#define GPIOC_ASCR	REGISTER_32(GPIOC_BASE + 0x2c)

// PORT D
#define GPIOD_MODER	REGISTER_32(GPIOD_BASE + 0)
#define GPIOD_OTYPER	REGISTER_32(GPIOD_BASE + 4)
#define GPIOD_OSPEEDR	REGISTER_32(GPIOD_BASE + 8)
#define GPIOD_PUPDR	REGISTER_32(GPIOD_BASE + 0x0c)
#define GPIOD_IDR	REGISTER_32(GPIOD_BASE + 0x10)
#define GPIOD_ODR	REGISTER_32(GPIOD_BASE + 0x14)
#define GPIOD_BSRR	REGISTER_32(GPIOD_BASE + 0x18)
#define GPIOD_LCKR	REGISTER_32(GPIOD_BASE + 0x1c)
#define GPIOD_AFRL	REGISTER_32(GPIOD_BASE + 0x20)
#define GPIOD_AFRH	REGISTER_32(GPIOD_BASE + 0x24)
#define GPIOD_BRR	REGISTER_32(GPIOD_BASE + 0x28)
#define GPIOD_ASCR	REGISTER_32(GPIOD_BASE + 0x2c)

// PORT E
#define GPIOE_MODER	REGISTER_32(GPIOE_BASE + 0)
#define GPIOE_OTYPER	REGISTER_32(GPIOE_BASE + 4)
#define GPIOE_OSPEEDR	REGISTER_32(GPIOE_BASE + 8)
#define GPIOE_PUPDR	REGISTER_32(GPIOE_BASE + 0x0c)
#define GPIOE_IDR	REGISTER_32(GPIOE_BASE + 0x10)
#define GPIOE_ODR	REGISTER_32(GPIOE_BASE + 0x14)
#define GPIOE_BSRR	REGISTER_32(GPIOE_BASE + 0x18)
#define GPIOE_LCKR	REGISTER_32(GPIOE_BASE + 0x1c)
#define GPIOE_AFRL	REGISTER_32(GPIOE_BASE + 0x20)
#define GPIOE_AFRH	REGISTER_32(GPIOE_BASE + 0x24)
#define GPIOE_BRR	REGISTER_32(GPIOE_BASE + 0x28)
#define GPIOE_ASCR	REGISTER_32(GPIOE_BASE + 0x2c)

// PORT F
#define GPIOF_MODER	REGISTER_32(GPIOF_BASE + 0)
#define GPIOF_OTYPER	REGISTER_32(GPIOF_BASE + 4)
#define GPIOF_OSPEEDR	REGISTER_32(GPIOF_BASE + 8)
#define GPIOF_PUPDR	REGISTER_32(GPIOF_BASE + 0x0c)
#define GPIOF_IDR	REGISTER_32(GPIOF_BASE + 0x10)
#define GPIOF_ODR	REGISTER_32(GPIOF_BASE + 0x14)
#define GPIOF_BSRR	REGISTER_32(GPIOF_BASE + 0x18)
#define GPIOF_LCKR	REGISTER_32(GPIOF_BASE + 0x1c)
#define GPIOF_AFRL	REGISTER_32(GPIOF_BASE + 0x20)
#define GPIOF_AFRH	REGISTER_32(GPIOF_BASE + 0x24)
#define GPIOF_BRR	REGISTER_32(GPIOF_BASE + 0x28)
#define GPIOF_ASCR	REGISTER_32(GPIOF_BASE + 0x2c)

// PORT G
#define GPIOG_MODER	REGISTER_32(GPIOG_BASE + 0)
#define GPIOG_OTYPER	REGISTER_32(GPIOG_BASE + 4)
#define GPIOG_OSPEEDR	REGISTER_32(GPIOG_BASE + 8)
#define GPIOG_PUPDR	REGISTER_32(GPIOG_BASE + 0x0c)
#define GPIOG_IDR	REGISTER_32(GPIOG_BASE + 0x10)
#define GPIOG_ODR	REGISTER_32(GPIOG_BASE + 0x14)
#define GPIOG_BSRR	REGISTER_32(GPIOG_BASE + 0x18)
#define GPIOG_LCKR	REGISTER_32(GPIOG_BASE + 0x1c)
#define GPIOG_AFRL	REGISTER_32(GPIOG_BASE + 0x20)
#define GPIOG_AFRH	REGISTER_32(GPIOG_BASE + 0x24)
#define GPIOG_BRR	REGISTER_32(GPIOG_BASE + 0x28)
#define GPIOG_ASCR	REGISTER_32(GPIOG_BASE + 0x2c)

// PORT H
#define GPIOH_MODER	REGISTER_32(GPIOH_BASE + 0)
#define GPIOH_OTYPER	REGISTER_32(GPIOH_BASE + 4)
#define GPIOH_OSPEEDR	REGISTER_32(GPIOH_BASE + 8)
#define GPIOH_PUPDR	REGISTER_32(GPIOH_BASE + 0x0c)
#define GPIOH_IDR	REGISTER_32(GPIOH_BASE + 0x10)
#define GPIOH_ODR	REGISTER_32(GPIOH_BASE + 0x14)
#define GPIOH_BSRR	REGISTER_32(GPIOH_BASE + 0x18)
#define GPIOH_LCKR	REGISTER_32(GPIOH_BASE + 0x1c)
#define GPIOH_AFRL	REGISTER_32(GPIOH_BASE + 0x20)
#define GPIOH_AFRH	REGISTER_32(GPIOH_BASE + 0x24)
#define GPIOH_BRR	REGISTER_32(GPIOH_BASE + 0x28)
#define GPIOH_ASCR	REGISTER_32(GPIOH_BASE + 0x2c)

// AES
#define AES_CR  	REGISTER_32(AES_BASE + 0x0000)
#define AES_SR  	REGISTER_32(AES_BASE + 0x0004)
#define AES_DINR  	REGISTER_32(AES_BASE + 0x0008)
#define AES_DOUTR  	REGISTER_32(AES_BASE + 0x000c)
#define AES_KEYR0  	REGISTER_32(AES_BASE + 0x0010)
#define AES_KEYR1  	REGISTER_32(AES_BASE + 0x0014)
#define AES_KEYR2  	REGISTER_32(AES_BASE + 0x0018)
#define AES_KEYR3  	REGISTER_32(AES_BASE + 0x001c)
#define AES_IVR0  	REGISTER_32(AES_BASE + 0x0020)
#define AES_IVR1  	REGISTER_32(AES_BASE + 0x0024)
#define AES_IVR2  	REGISTER_32(AES_BASE + 0x0028)
#define AES_IVR3  	REGISTER_32(AES_BASE + 0x002c)



// CRC
#define CRC_DR 		REGISTER_32(CRC_BASE + 0)
#define CRC_IDR 	REGISTER_32(CRC_BASE + 4)
#define CRC_CR 		REGISTER_32(CRC_BASE + 8)
#define CRC_INIT 	REGISTER_32(CRC_BASE + 0x10)
#define CRC_POL 	REGISTER_32(CRC_BASE + 0x14)

// FLASH
#define FLASH_ACR	REGISTER_32(FLASH_BASE + 0x00)
#define FLASH_PDKEYR	REGISTER_32(FLASH_BASE + 0x04)
#define FLASH_KEYR	REGISTER_32(FLASH_BASE + 0x08)
#define FLASH_OPTKEYR	REGISTER_32(FLASH_BASE + 0x0c)
#define FLASH_SR	REGISTER_32(FLASH_BASE + 0x10)
#define FLASH_CR	REGISTER_32(FLASH_BASE + 0x14)
#define FLASH_ECCR	REGISTER_32(FLASH_BASE + 0x18)
#define FLASH_OPTR	REGISTER_32(FLASH_BASE + 0x20)
#define FLASH_PCPROP1SR	REGISTER_32(FLASH_BASE + 0x24)
#define FLASH_PCPROP1ER	REGISTER_32(FLASH_BASE + 0x28)
#define FLASH_WRP1AR	REGISTER_32(FLASH_BASE + 0x2c)
#define FLASH_WRP1BR	REGISTER_32(FLASH_BASE + 0x30)
#define FLASH_PCPROP2SR	REGISTER_32(FLASH_BASE + 0x44)
#define FLASH_PCPROP2ER	REGISTER_32(FLASH_BASE + 0x48)
#define FLASH_WRP2AR	REGISTER_32(FLASH_BASE + 0x4c)
#define FLASH_WRP2BR	REGISTER_32(FLASH_BASE + 0x50)


// RCC registers
#define RCC_CR 		REGISTER_32(RCC_BASE + 0x00)
#define RCC_ICSCR	REGISTER_32(RCC_BASE + 0x04)
#define RCC_CFGR	REGISTER_32(RCC_BASE + 0x08)
#define RCC_PLLCFGR	REGISTER_32(RCC_BASE + 0x0c)
#define RCC_PLLSAI1CFGR	REGISTER_32(RCC_BASE + 0x10)
#define RCC_PLLSAI2CFGR	REGISTER_32(RCC_BASE + 0x14)
#define RCC_CIER	REGISTER_32(RCC_BASE + 0x18)	
#define RCC_CIFR	REGISTER_32(RCC_BASE + 0x1c)	
#define RCC_CICR	REGISTER_32(RCC_BASE + 0x20)
#define RCC_AHB1RSTR    REGISTER_32(RCC_BASE + 0x28)
#define RCC_AHB2RSTR    REGISTER_32(RCC_BASE + 0x2c)
#define RCC_AHB3RSTR    REGISTER_32(RCC_BASE + 0x30)
#define RCC_APB1RSTR1   REGISTER_32(RCC_BASE + 0x38)
#define RCC_APB1RSTR2   REGISTER_32(RCC_BASE + 0x3c)
#define RCC_APB2RSTR	REGISTER_32(RCC_BASE + 0x40)
#define RCC_AHB1ENR	REGISTER_32(RCC_BASE + 0x48)
#define RCC_AHB2ENR	REGISTER_32(RCC_BASE + 0x4c)
#define RCC_AHB3ENR	REGISTER_32(RCC_BASE + 0x50)
#define RCC_APB1ENR1	REGISTER_32(RCC_BASE + 0x58)
#define RCC_APB1ENR2	REGISTER_32(RCC_BASE + 0x5c)
#define RCC_APB2ENR	REGISTER_32(RCC_BASE + 0x60)
#define RCC_AHB1SMENR	REGISTER_32(RCC_BASE + 0x68)
#define RCC_AHB2SMENR	REGISTER_32(RCC_BASE + 0x6c)
#define RCC_AHB3SMENR	REGISTER_32(RCC_BASE + 0x70)
#define RCC_APB1SMENR1	REGISTER_32(RCC_BASE + 0x78)
#define RCC_APB1SMENR2	REGISTER_32(RCC_BASE + 0x7c)
#define RCC_APB2SMENR	REGISTER_32(RCC_BASE + 0x80)
#define RCC_CCIPR	REGISTER_32(RCC_BASE + 0x88)
#define RCC_BDCR	REGISTER_32(RCC_BASE + 0x90)
#define RCC_CSR 	REGISTER_32(RCC_BASE + 0x94)


// DMA2
#define DMA2_ISR 	REGISTER_32(DMA2_BASE + 0)
#define DMA2_IFCR 	REGISTER_32(DMA2_BASE + 4)
#define DMA2_CCR1 	REGISTER_32(DMA2_BASE + 8)
#define DMA2_CNDTR1	REGISTER_32(DMA2_BASE + 0x0c)
#define DMA2_CPAR1	REGISTER_32(DMA2_BASE + 0x10)
#define DMA2_CMAR1	REGISTER_32(DMA2_BASE + 0x14)
#define DMA2_CCR2	REGISTER_32(DMA2_BASE + 0x1c)
#define DMA2_CNDTR2	REGISTER_32(DMA2_BASE + 0x20)
#define DMA2_CPAR2	REGISTER_32(DMA2_BASE + 0x24)
#define DMA2_CMAR2	REGISTER_32(DMA2_BASE + 0x28)
#define DMA2_CCR3	REGISTER_32(DMA2_BASE + 0x30)
#define DMA2_CNDTR3	REGISTER_32(DMA2_BASE + 0x34)
#define DMA2_CPAR3	REGISTER_32(DMA2_BASE + 0x38)
#define DMA2_CMAR3	REGISTER_32(DMA2_BASE + 0x3c)
#define DMA2_CCR4	REGISTER_32(DMA2_BASE + 0x44)
#define DMA2_CNDTR4	REGISTER_32(DMA2_BASE + 0x48)
#define DMA2_CPAR4	REGISTER_32(DMA2_BASE + 0x4c)
#define DMA2_CMAR4	REGISTER_32(DMA2_BASE + 0x50)
#define DMA2_CCR5	REGISTER_32(DMA2_BASE + 0x58)
#define DMA2_CNDTR5	REGISTER_32(DMA2_BASE + 0x5c)
#define DMA2_CPAR5	REGISTER_32(DMA2_BASE + 0x60)
#define DMA2_CMAR5	REGISTER_32(DMA2_BASE + 0x64)
#define DMA2_CCR6	REGISTER_32(DMA2_BASE + 0x6c)
#define DMA2_CNDTR6	REGISTER_32(DMA2_BASE + 0x70)
#define DMA2_CPAR6	REGISTER_32(DMA2_BASE + 0x74)
#define DMA2_CMAR6	REGISTER_32(DMA2_BASE + 0x78)
#define DMA2_CCR7	REGISTER_32(DMA2_BASE + 0x80)
#define DMA2_CNDTR7	REGISTER_32(DMA2_BASE + 0x84)
#define DMA2_CPAR7	REGISTER_32(DMA2_BASE + 0x88)
#define DMA2_CMAR7	REGISTER_32(DMA2_BASE + 0x8c)
#define DMA2_CSELR	REGISTER_32(DMA2_BASE + 0xa8)


// DMA1
#define DMA1_ISR 	REGISTER_32(DMA1_BASE + 0)
#define DMA1_IFCR 	REGISTER_32(DMA1_BASE + 4)
#define DMA1_CCR1 	REGISTER_32(DMA1_BASE + 8)
#define DMA1_CNDTR1	REGISTER_32(DMA1_BASE + 0x0c)
#define DMA1_CPAR1	REGISTER_32(DMA1_BASE + 0x10)
#define DMA1_CMAR1	REGISTER_32(DMA1_BASE + 0x14)
#define DMA1_CCR2	REGISTER_32(DMA1_BASE + 0x1c)
#define DMA1_CNDTR2	REGISTER_32(DMA1_BASE + 0x20)
#define DMA1_CPAR2	REGISTER_32(DMA1_BASE + 0x24)
#define DMA1_CMAR2	REGISTER_32(DMA1_BASE + 0x28)
#define DMA1_CCR3	REGISTER_32(DMA1_BASE + 0x30)
#define DMA1_CNDTR3	REGISTER_32(DMA1_BASE + 0x34)
#define DMA1_CPAR3	REGISTER_32(DMA1_BASE + 0x38)
#define DMA1_CMAR3	REGISTER_32(DMA1_BASE + 0x3c)
#define DMA1_CCR4	REGISTER_32(DMA1_BASE + 0x44)
#define DMA1_CNDTR4	REGISTER_32(DMA1_BASE + 0x48)
#define DMA1_CPAR4	REGISTER_32(DMA1_BASE + 0x4c)
#define DMA1_CMAR4	REGISTER_32(DMA1_BASE + 0x50)
#define DMA1_CCR5	REGISTER_32(DMA1_BASE + 0x58)
#define DMA1_CNDTR5	REGISTER_32(DMA1_BASE + 0x5c)
#define DMA1_CPAR5	REGISTER_32(DMA1_BASE + 0x60)
#define DMA1_CMAR5	REGISTER_32(DMA1_BASE + 0x64)
#define DMA1_CCR6	REGISTER_32(DMA1_BASE + 0x6c)
#define DMA1_CNDTR6	REGISTER_32(DMA1_BASE + 0x70)
#define DMA1_CPAR6	REGISTER_32(DMA1_BASE + 0x74)
#define DMA1_CMAR6	REGISTER_32(DMA1_BASE + 0x78)
#define DMA1_CCR7	REGISTER_32(DMA1_BASE + 0x80)
#define DMA1_CNDTR7	REGISTER_32(DMA1_BASE + 0x84)
#define DMA1_CPAR7	REGISTER_32(DMA1_BASE + 0x88)
#define DMA1_CMAR7	REGISTER_32(DMA1_BASE + 0x8c)
#define DMA1_CSELR	REGISTER_32(DMA1_BASE + 0xa8)

// DBGMCU
#define DBGMCU_IDCODE	REGISTER_32(DBGMCU_BASE + 0x0)
#define DBGMCU_CR  	REGISTER_32(DBGMCU_BASE + 0x4)
#define DBGMCU_APB1FZR1 REGISTER_32(DBGMCU_BASE + 0x8)
#define DBGMCU_APB1FZR2 REGISTER_32(DBGMCU_BASE + 0xc)
#define DBGMCU_APB2FZR  REGISTER_32(DBGMCU_BASE + 0x10)



// Timer 15
#define TIM15_CR1	REGISTER_32(TIM15_BASE + 0)
#define TIM15_CR2	REGISTER_32(TIM15_BASE + 4)
#define TIM15_SMCR	REGISTER_32(TIM15_BASE + 8)
#define TIM15_DIER	REGISTER_32(TIM15_BASE + 0x0c)
#define TIM15_SR	REGISTER_32(TIM15_BASE + 0x10)
#define TIM15_EGR	REGISTER_32(TIM15_BASE + 0x14)
#define TIM15_CCMR1	REGISTER_32(TIM15_BASE + 0x18)
#define TIM15_CCER	REGISTER_32(TIM15_BASE + 0x20)
#define TIM15_CNT	REGISTER_32(TIM15_BASE + 0x24)
#define TIM15_PSC	REGISTER_32(TIM15_BASE + 0x28)
#define TIM15_ARR	REGISTER_32(TIM15_BASE + 0x2c)
#define TIM15_RCR	REGISTER_32(TIM15_BASE + 0x30)
#define TIM15_CCR1	REGISTER_32(TIM15_BASE + 0x34)
#define TIM15_CCR2	REGISTER_32(TIM15_BASE + 0x38)
#define TIM15_BDTR	REGISTER_32(TIM15_BASE + 0x44)
#define TIM15_DCR	REGISTER_32(TIM15_BASE + 0x48)
#define TIM15_DMAR	REGISTER_32(TIM15_BASE + 0x4c)
#define TIM15_OR1	REGISTER_32(TIM15_BASE + 0x50)
#define TIM15_OR2	REGISTER_32(TIM15_BASE + 0x60)



// Timer 16
#define TIM16_CR1	REGISTER_32(TIM16_BASE + 0)
#define TIM16_CR2	REGISTER_32(TIM16_BASE + 4)
#define TIM16_DIER	REGISTER_32(TIM16_BASE + 0x0c)
#define TIM16_SR	REGISTER_32(TIM16_BASE + 0x10)
#define TIM16_EGR	REGISTER_32(TIM16_BASE + 0x14)
#define TIM16_CCMR1	REGISTER_32(TIM16_BASE + 0x18)
#define TIM16_CCER	REGISTER_32(TIM16_BASE + 0x20)
#define TIM16_CNT	REGISTER_32(TIM16_BASE + 0x24)
#define TIM16_PSC	REGISTER_32(TIM16_BASE + 0x28)
#define TIM16_ARR	REGISTER_32(TIM16_BASE + 0x2c)
#define TIM16_RCR	REGISTER_32(TIM16_BASE + 0x30)
#define TIM16_CCR1	REGISTER_32(TIM16_BASE + 0x34)
#define TIM16_BDTR	REGISTER_32(TIM16_BASE + 0x44)
#define TIM16_DCR	REGISTER_32(TIM16_BASE + 0x48)
#define TIM16_DMAR	REGISTER_32(TIM16_BASE + 0x4c)
#define TIM16_OR1	REGISTER_32(TIM16_BASE + 0x50)
#define TIM16_OR2	REGISTER_32(TIM16_BASE + 0x60)

// Timer 17
#define TIM17_CR1	REGISTER_32(TIM17_BASE + 0)
#define TIM17_CR2	REGISTER_32(TIM17_BASE + 4)
#define TIM17_DIER	REGISTER_32(TIM17_BASE + 0x0c)
#define TIM17_SR	REGISTER_32(TIM17_BASE + 0x10)
#define TIM17_EGR	REGISTER_32(TIM17_BASE + 0x14)
#define TIM17_CCMR1	REGISTER_32(TIM17_BASE + 0x18)
#define TIM17_CCER	REGISTER_32(TIM17_BASE + 0x20)
#define TIM17_CNT	REGISTER_32(TIM17_BASE + 0x24)
#define TIM17_PSC	REGISTER_32(TIM17_BASE + 0x28)
#define TIM17_ARR	REGISTER_32(TIM17_BASE + 0x2c)
#define TIM17_RCR	REGISTER_32(TIM17_BASE + 0x30)
#define TIM17_CCR1	REGISTER_32(TIM17_BASE + 0x34)
#define TIM17_BDTR	REGISTER_32(TIM17_BASE + 0x44)
#define TIM17_DCR	REGISTER_32(TIM17_BASE + 0x48)
#define TIM17_DMAR	REGISTER_32(TIM17_BASE + 0x4c)
#define TIM17_OR1	REGISTER_32(TIM17_BASE + 0x50)
#define TIM17_OR2	REGISTER_32(TIM17_BASE + 0x60)



// USART1

#define USART1_CR1	REGISTER_32(USART1_BASE + 0)
#define USART1_CR2	REGISTER_32(USART1_BASE + 4)
#define USART1_CR3	REGISTER_32(USART1_BASE + 8)
#define USART1_BRR	REGISTER_32(USART1_BASE + 0x0c)
#define USART1_GTPR	REGISTER_32(USART1_BASE + 0x10)
#define USART1_RTOR	REGISTER_32(USART1_BASE + 0x14)
#define USART1_RQR	REGISTER_32(USART1_BASE + 0x18)
#define USART1_ISR	REGISTER_32(USART1_BASE + 0x1c)
#define USART1_ICR	REGISTER_32(USART1_BASE + 0x20)
#define USART1_RDR	REGISTER_32(USART1_BASE + 0x24)
#define USART1_TDR	REGISTER_32(USART1_BASE + 0x28)


// Timer 8
#define TIM8_CR1	REGISTER_32(TIM8_BASE + 0)
#define TIM8_CR2	REGISTER_32(TIM8_BASE + 4)
#define TIM8_SMCR	REGISTER_32(TIM8_BASE + 8)
#define TIM8_DIER	REGISTER_32(TIM8_BASE + 0x0c)
#define TIM8_SR		REGISTER_32(TIM8_BASE + 0x10)
#define TIM8_EGR	REGISTER_32(TIM8_BASE + 0x14)
#define TIM8_CCMR1	REGISTER_32(TIM8_BASE + 0x18)
#define TIM8_CCMR2	REGISTER_32(TIM8_BASE + 0x1c)
#define TIM8_CCER	REGISTER_32(TIM8_BASE + 0x20)
#define TIM8_CNT	REGISTER_32(TIM8_BASE + 0x24)
#define TIM8_PSC	REGISTER_32(TIM8_BASE + 0x28)
#define TIM8_ARR	REGISTER_32(TIM8_BASE + 0x2c)
#define TIM8_RCR	REGISTER_32(TIM8_BASE + 0x30)
#define TIM8_CCR1	REGISTER_32(TIM8_BASE + 0x34)
#define TIM8_CCR2	REGISTER_32(TIM8_BASE + 0x38)
#define TIM8_CCR3	REGISTER_32(TIM8_BASE + 0x3c)
#define TIM8_CCR4	REGISTER_32(TIM8_BASE + 0x40)
#define TIM8_BDTR	REGISTER_32(TIM8_BASE + 0x44)
#define TIM8_DCR	REGISTER_32(TIM8_BASE + 0x48)
#define TIM8_DMAR	REGISTER_32(TIM8_BASE + 0x4c)
#define TIM8_OR1	REGISTER_32(TIM8_BASE + 0x50)
#define TIM8_CCMR3	REGISTER_32(TIM8_BASE + 0x54)
#define TIM8_CCR5	REGISTER_32(TIM8_BASE + 0x58)
#define TIM8_CCR6	REGISTER_32(TIM8_BASE + 0x5c)
#define TIM8_OR2	REGISTER_32(TIM8_BASE + 0x60)
#define TIM8_OR3	REGISTER_32(TIM8_BASE + 0x64)


// SPI1
#define SPI1_CR1	REGISTER_32(SPI1_BASE + 0)
#define SPI1_CR2	REGISTER_32(SPI1_BASE + 4)
#define SPI1_SR		REGISTER_32(SPI1_BASE + 8)
#define SPI1_DR		REGISTER_16(SPI1_BASE + 0x0c)
#define SPI1_DR8	REGISTER_8(SPI1_BASE + 0x0c)
#define SPI1_CRCPR	REGISTER_32(SPI1_BASE + 0x10)
#define SPI1_RXCRCR	REGISTER_32(SPI1_BASE + 0x14)
#define SPI1_TXCRCR	REGISTER_32(SPI1_BASE + 0x18)


// Timer 1
#define TIM1_CR1	REGISTER_32(TIM1_BASE + 0)
#define TIM1_CR2	REGISTER_32(TIM1_BASE + 4)
#define TIM1_SMCR	REGISTER_32(TIM1_BASE + 8)
#define TIM1_DIER	REGISTER_32(TIM1_BASE + 0x0c)
#define TIM1_SR		REGISTER_32(TIM1_BASE + 0x10)
#define TIM1_EGR	REGISTER_32(TIM1_BASE + 0x14)
#define TIM1_CCMR1	REGISTER_32(TIM1_BASE + 0x18)
#define TIM1_CCMR2	REGISTER_32(TIM1_BASE + 0x1c)
#define TIM1_CCER	REGISTER_32(TIM1_BASE + 0x20)
#define TIM1_CNT	REGISTER_32(TIM1_BASE + 0x24)
#define TIM1_PSC	REGISTER_32(TIM1_BASE + 0x28)
#define TIM1_ARR	REGISTER_32(TIM1_BASE + 0x2c)
#define TIM1_RCR	REGISTER_32(TIM1_BASE + 0x30)
#define TIM1_CCR1	REGISTER_32(TIM1_BASE + 0x34)
#define TIM1_CCR2	REGISTER_32(TIM1_BASE + 0x38)
#define TIM1_CCR3	REGISTER_32(TIM1_BASE + 0x3c)
#define TIM1_CCR4	REGISTER_32(TIM1_BASE + 0x40)
#define TIM1_BDTR	REGISTER_32(TIM1_BASE + 0x44)
#define TIM1_DCR	REGISTER_32(TIM1_BASE + 0x48)
#define TIM1_DMAR	REGISTER_32(TIM1_BASE + 0x4c)
#define TIM1_OR1	REGISTER_32(TIM1_BASE + 0x50)
#define TIM1_CCMR3	REGISTER_32(TIM1_BASE + 0x54)
#define TIM1_CCR5	REGISTER_32(TIM1_BASE + 0x58)
#define TIM1_CCR6	REGISTER_32(TIM1_BASE + 0x5c)
#define TIM1_OR2	REGISTER_32(TIM1_BASE + 0x60)
#define TIM1_OR3	REGISTER_32(TIM1_BASE + 0x64)



// SDMMC1
#define SDMMC_POWER    	REGISTER_32(SDMMC1_BASE + 0x00)
#define SDMMC_CLKCR    	REGISTER_32(SDMMC1_BASE + 0x04)
#define SDMMC_ARG       REGISTER_32(SDMMC1_BASE + 0x08) 
#define SDMMC_CMD    	REGISTER_32(SDMMC1_BASE + 0x0c)
#define SDMMC_RESPCMD   REGISTER_32(SDMMC1_BASE + 0x10)
#define SDMMC_RESP1     REGISTER_32(SDMMC1_BASE + 0x14)
#define SDMMC_RESP2     REGISTER_32(SDMMC1_BASE + 0x18)
#define SDMMC_RESP3     REGISTER_32(SDMMC1_BASE + 0x1c)
#define SDMMC_RESP4     REGISTER_32(SDMMC1_BASE + 0x20)
#define SDMMC_DTIMER    REGISTER_32(SDMMC1_BASE + 0x24)
#define SDMMC_DLEN      REGISTER_32(SDMMC1_BASE + 0x28)
#define SDMMC_DCTRL     REGISTER_32(SDMMC1_BASE + 0x2c)
#define SDMMC_DCOUNT    REGISTER_32(SDMMC1_BASE + 0x30)
#define SDMMC_STA       REGISTER_32(SDMMC1_BASE + 0x34)
#define SDMMC_ICR       REGISTER_32(SDMMC1_BASE + 0x38)
#define SDMMC_MASK      REGISTER_32(SDMMC1_BASE + 0x3c)
#define SDMMC_FIFOCNT   REGISTER_32(SDMMC1_BASE + 0x48)
#define SDMMC_FIFO      REGISTER_32(SDMMC1_BASE + 0x80)


// FIREWALL
#define FW_CSSA 	REGISTER_32(FIREWALL_BASE + 0x00)
#define FW_CSL  	REGISTER_32(FIREWALL_BASE + 0x04)
#define FW_NVDSSA  	REGISTER_32(FIREWALL_BASE + 0x08)
#define FW_NVDSL  	REGISTER_32(FIREWALL_BASE + 0x0c)
#define FW_VDSSA  	REGISTER_32(FIREWALL_BASE + 0x10)
#define FW_VDSL  	REGISTER_32(FIREWALL_BASE + 0x14)
#define FW_CR     	REGISTER_32(FIREWALL_BASE + 0x20)



// EXTI	
#define EXTI_IMR1	REGISTER_32(EXTI_BASE + 0)
#define EXTI_EMR1	REGISTER_32(EXTI_BASE + 4)
#define EXTI_RTSR1	REGISTER_32(EXTI_BASE + 8)
#define EXTI_FTSR1	REGISTER_32(EXTI_BASE + 0x0c)
#define EXTI_SWIER1	REGISTER_32(EXTI_BASE + 0x10)
#define EXTI_PR1	REGISTER_32(EXTI_BASE + 0x14)
#define EXTI_IMR2	REGISTER_32(EXTI_BASE + 0x20)
#define EXTI_EMR2	REGISTER_32(EXTI_BASE + 0x24)
#define EXTI_RTSR2	REGISTER_32(EXTI_BASE + 0x28)
#define EXTI_FTSR2	REGISTER_32(EXTI_BASE + 0x2c)
#define EXTI_SWIER2	REGISTER_32(EXTI_BASE + 0x30)
#define EXTI_PR2	REGISTER_32(EXTI_BASE + 0x34)



// COMP 
#define COMP1_CSR	REGISTER_32(COMP_BASE + 0x1c)
#define COMP2_CSR	REGISTER_32(COMP_BASE + 0x20)


// VREFBUF
#define VREFBUF_CSR	REGISTER_32(VREFBUF_BASE + 0x00)
#define VREFBUF_CCR	REGISTER_32(VREFBUF_BASE + 0x04)


// SYS Config
#define SYSCFG_MEMRMP	REGISTER_32(SYSCFG_BASE + 0)
#define SYSCFG_CFGR1	REGISTER_32(SYSCFG_BASE + 4)
#define SYSCFG_EXTICR1	REGISTER_32(SYSCFG_BASE + 8)
#define SYSCFG_EXTICR2	REGISTER_32(SYSCFG_BASE + 0x0c)
#define SYSCFG_EXTICR3	REGISTER_32(SYSCFG_BASE + 0x10)
#define SYSCFG_EXTICR4	REGISTER_32(SYSCFG_BASE + 0x14)
#define SYSCFG_SCSR	REGISTER_32(SYSCFG_BASE + 0x18)
#define SYSCFG_CFGR2	REGISTER_32(SYSCFG_BASE + 0x1c)
#define SYSCFG_SWPR	REGISTER_32(SYSCFG_BASE + 0x20)
#define SYSCFG_SKR	REGISTER_32(SYSCFG_BASE + 0x24)


// LPTIM2
#define LPTIM2_ISR	REGISTER_32(LPTIM2_BASE + 0x00)
#define LPTIM2_ICR	REGISTER_32(LPTIM2_BASE + 0x04)
#define LPTIM2_IER	REGISTER_32(LPTIM2_BASE + 0x08)
#define LPTIM2_CFGR	REGISTER_32(LPTIM2_BASE + 0x0c)
#define LPTIM2_CR	REGISTER_32(LPTIM2_BASE + 0x10)
#define LPTIM2_CMP	REGISTER_32(LPTIM2_BASE + 0x14)
#define LPTIM2_ARR	REGISTER_32(LPTIM2_BASE + 0x18)
#define LPTIM2_CNT	REGISTER_32(LPTIM2_BASE + 0x1c)
#define LPTIM2_OR	REGISTER_32(LPTIM2_BASE + 0x20)

// SWPMI Single Wire protocol master
#define SWPMI_CR	REGISTER_32(SWPMI1_BASE + 0x00)
#define SWPMI_BRR	REGISTER_32(SWPMI1_BASE + 0x04)
#define SWPMI_ISR	REGISTER_32(SWPMI1_BASE + 0x0c)
#define SWPMI_ICR	REGISTER_32(SWPMI1_BASE + 0x10)
#define SWPMI_IER	REGISTER_32(SWPMI1_BASE + 0x14)
#define SWPMI_RFL	REGISTER_32(SWPMI1_BASE + 0x18)
#define SWPMI_TDR	REGISTER_32(SWPMI1_BASE + 0x1c)
#define SWPMI_RDR	REGISTER_32(SWPMI1_BASE + 0x20)
#define SWPMI_OR	REGISTER_32(SWPMI1_BASE + 0x24)


// LPUART1_BASE
#define LPUART_CR1	REGISTER_32(LPUART1_BASE + 0x00)
#define LPUART_CR2	REGISTER_32(LPUART1_BASE + 0x04)
#define LPUART_CR3	REGISTER_32(LPUART1_BASE + 0x08)
#define LPUART_BRR	REGISTER_32(LPUART1_BASE + 0x0c)
#define LPUART_RQR	REGISTER_32(LPUART1_BASE + 0x18)
#define LPUART_ISR	REGISTER_32(LPUART_BASE + 0x1c)
#define LPUART_ICR	REGISTER_32(LPUART_BASE + 0x20)
#define LPUART_RDR	REGISTER_32(LPUART_BASE + 0x24)
#define LPUART_TDR	REGISTER_32(LPUART_BASE + 0x28)


// LPTIM1
#define LPTIM1_ISR	REGISTER_32(LPTIM1_BASE + 0x00)
#define LPTIM1_ICR	REGISTER_32(LPTIM1_BASE + 0x04)
#define LPTIM1_IER	REGISTER_32(LPTIM1_BASE + 0x08)
#define LPTIM1_CFGR	REGISTER_32(LPTIM1_BASE + 0x0c)
#define LPTIM1_CR	REGISTER_32(LPTIM1_BASE + 0x10)
#define LPTIM1_CMP	REGISTER_32(LPTIM1_BASE + 0x14)
#define LPTIM1_ARR	REGISTER_32(LPTIM1_BASE + 0x18)
#define LPTIM1_CNT	REGISTER_32(LPTIM1_BASE + 0x1c)
#define LPTIM1_OR	REGISTER_32(LPTIM1_BASE + 0x20)


// OP-AMP
#define OPAMP1_CSR	REGISTER_32(OPAMP_BASE + 0x00)
#define OPAMP1_OTR	REGISTER_32(OPAMP_BASE + 0x04)
#define OPAMP1_LPOTR	REGISTER_32(OPAMP_BASE + 0x08)
#define OPAMP2_CSR	REGISTER_32(OPAMP_BASE + 0x10)
#define OPAMP2_OTR	REGISTER_32(OPAMP_BASE + 0x14)
#define OPAMP2_LPOTR	REGISTER_32(OPAMP_BASE + 0x18)

// DAC 
#define DAC_CR  	REGISTER_32(DAC_BASE + 0x00)
#define DAC_SWTRGR  	REGISTER_32(DAC_BASE + 0x04)
#define DAC_DHR12R1  	REGISTER_32(DAC_BASE + 0x08)
#define DAC_DHR12L1  	REGISTER_32(DAC_BASE + 0x0c)
#define DAC_DHR8R1  	REGISTER_32(DAC_BASE + 0x10)
#define DAC_DHR12R2  	REGISTER_32(DAC_BASE + 0x14)
#define DAC_DHR12L2  	REGISTER_32(DAC_BASE + 0x18)
#define DAC_DHR8R2  	REGISTER_32(DAC_BASE + 0x1c)
#define DAC_DHR12RD  	REGISTER_32(DAC_BASE + 0x20)
#define DAC_DHR12LD  	REGISTER_32(DAC_BASE + 0x24)
#define DAC_DHR8RD  	REGISTER_32(DAC_BASE + 0x28)
#define DAC_DOR1  	REGISTER_32(DAC_BASE + 0x2c)
#define DAC_DOR2  	REGISTER_32(DAC_BASE + 0x30)
#define DAC_SR  	REGISTER_32(DAC_BASE + 0x34)
#define DAC_CCR  	REGISTER_32(DAC_BASE + 0x38)
#define DAC_MCR  	REGISTER_32(DAC_BASE + 0x3c)
#define DAC_SHSR1  	REGISTER_32(DAC_BASE + 0x40)
#define DAC_SHSR2  	REGISTER_32(DAC_BASE + 0x44)
#define DAC_SHHR  	REGISTER_32(DAC_BASE + 0x48)
#define DAC_SHRR  	REGISTER_32(DAC_BASE + 0x4c)


// PWR 
#define PWR_CR1		REGISTER_32(PWR_BASE + 0x000)
#define PWR_CR2		REGISTER_32(PWR_BASE + 0x004)
#define PWR_CR3		REGISTER_32(PWR_BASE + 0x008)
#define PWR_CR4		REGISTER_32(PWR_BASE + 0x00c)
#define PWR_SR1		REGISTER_32(PWR_BASE + 0x010)
#define PWR_SR2		REGISTER_32(PWR_BASE + 0x014)
#define PWR_SCR		REGISTER_32(PWR_BASE + 0x018)
#define PWR_PUCRA	REGISTER_32(PWR_BASE + 0x020)
#define PWR_PDCRA	REGISTER_32(PWR_BASE + 0x024)
#define PWR_PUCRB	REGISTER_32(PWR_BASE + 0x028)
#define PWR_PDCRB	REGISTER_32(PWR_BASE + 0x02c)
#define PWR_PUCRC	REGISTER_32(PWR_BASE + 0x030)
#define PWR_PDCRC	REGISTER_32(PWR_BASE + 0x034)
#define PWR_PUCRD       REGISTER_32(PWR_BASE + 0x038)
#define PWR_PDCRD	REGISTER_32(PWR_BASE + 0x03c)
#define PWR_PUCRE	REGISTER_32(PWR_BASE + 0x040)
#define PWR_PDCRE	REGISTER_32(PWR_BASE + 0x044)
#define PWR_PUCRF	REGISTER_32(PWR_BASE + 0x048)
#define PWR_PDCRF	REGISTER_32(PWR_BASE + 0x04c)
#define PWR_PUCRG	REGISTER_32(PWR_BASE + 0x050)
#define PWR_PDCRG	REGISTER_32(PWR_BASE + 0x054)
#define PWR_PUCRH	REGISTER_32(PWR_BASE + 0x058)
#define PWR_PDCRH	REGISTER_32(PWR_BASE + 0x05c)


// CAN
#define CAN_MCR		REGISTER_32(CAN1_BASE + 0x000)
#define CAN_MSR		REGISTER_32(CAN1_BASE + 0x004)
#define CAN_TSR		REGISTER_32(CAN1_BASE + 0x008)
#define CAN_RF0R	REGISTER_32(CAN1_BASE + 0x00c)
#define CAN_RF1R	REGISTER_32(CAN1_BASE + 0x010)
#define CAN_IER		REGISTER_32(CAN1_BASE + 0x014)
#define CAN_ESR		REGISTER_32(CAN1_BASE + 0x018)
#define CAN_BTR		REGISTER_32(CAN1_BASE + 0x01c)
#define CAN_TI0R	REGISTER_32(CAN1_BASE + 0x180)
#define CAN_TDT0R	REGISTER_32(CAN1_BASE + 0x184)
#define CAN_TDL0R	REGISTER_32(CAN1_BASE + 0x188)
#define CAN_TDH0R	REGISTER_32(CAN1_BASE + 0x18c)
#define CAN_TI1R	REGISTER_32(CAN1_BASE + 0x190)
#define CAN_TDT1R	REGISTER_32(CAN1_BASE + 0x194)
#define CAN_TDL1R	REGISTER_32(CAN1_BASE + 0x198)
#define CAN_TDH1R	REGISTER_32(CAN1_BASE + 0x19c)
#define CAN_TI2R	REGISTER_32(CAN1_BASE + 0x1a0)
#define CAN_TDT2R	REGISTER_32(CAN1_BASE + 0x1a4)
#define CAN_TDL2R	REGISTER_32(CAN1_BASE + 0x1a8)
#define CAN_TDH2R	REGISTER_32(CAN1_BASE + 0x1ac)
#define CAN_RI0R	REGISTER_32(CAN1_BASE + 0x1b0)
#define CAN_RDT0R	REGISTER_32(CAN1_BASE + 0x1b4)
#define CAN_RDL0R	REGISTER_32(CAN1_BASE + 0x1b8)
#define CAN_RDH0R	REGISTER_32(CAN1_BASE + 0x1bc)
#define CAN_RI1R	REGISTER_32(CAN1_BASE + 0x1c0)
#define CAN_RDT1R	REGISTER_32(CAN1_BASE + 0x1c4)
#define CAN_RDL1R	REGISTER_32(CAN1_BASE + 0x1c8)
#define CAN_RDH1R	REGISTER_32(CAN1_BASE + 0x1cc)
#define CAN_FMR		REGISTER_32(CAN1_BASE + 0x200)
#define CAN_FM1R	REGISTER_32(CAN1_BASE + 0x204)
#define CAN_FS1R	REGISTER_32(CAN1_BASE + 0x20c)
#define CAN_FFA1R	REGISTER_32(CAN1_BASE + 0x214)
#define CAN_FA1R	REGISTER_32(CAN1_BASE + 0x21c)

#define CAN_F0R1	REGISTER_32(CAN1_BASE + 0x240)
#define CAN_F0R2	REGISTER_32(CAN1_BASE + 0x244)
#define CAN_F1R1	REGISTER_32(CAN1_BASE + 0x248)
#define CAN_F1R2	REGISTER_32(CAN1_BASE + 0x24c)
#define CAN_F2R1	REGISTER_32(CAN1_BASE + 0x250)
#define CAN_F2R2	REGISTER_32(CAN1_BASE + 0x254)
#define CAN_F3R1	REGISTER_32(CAN1_BASE + 0x258)
#define CAN_F3R2	REGISTER_32(CAN1_BASE + 0x25c)
#define CAN_F4R1	REGISTER_32(CAN1_BASE + 0x260)
#define CAN_F4R2	REGISTER_32(CAN1_BASE + 0x264)
#define CAN_F5R1	REGISTER_32(CAN1_BASE + 0x268)
#define CAN_F5R2	REGISTER_32(CAN1_BASE + 0x26c)
#define CAN_F6R1	REGISTER_32(CAN1_BASE + 0x270)
#define CAN_F6R2	REGISTER_32(CAN1_BASE + 0x274)
#define CAN_F7R1	REGISTER_32(CAN1_BASE + 0x278)
#define CAN_F7R2	REGISTER_32(CAN1_BASE + 0x27c)
#define CAN_F8R1	REGISTER_32(CAN1_BASE + 0x280)
#define CAN_F8R2	REGISTER_32(CAN1_BASE + 0x284)
#define CAN_F9R1	REGISTER_32(CAN1_BASE + 0x288)
#define CAN_F9R2	REGISTER_32(CAN1_BASE + 0x28c)
#define CAN_F10R1	REGISTER_32(CAN1_BASE + 0x290)
#define CAN_F10R2	REGISTER_32(CAN1_BASE + 0x294)
#define CAN_F11R1	REGISTER_32(CAN1_BASE + 0x298)
#define CAN_F11R2	REGISTER_32(CAN1_BASE + 0x29c)
#define CAN_F12R1	REGISTER_32(CAN1_BASE + 0x2a0)
#define CAN_F12R2	REGISTER_32(CAN1_BASE + 0x2a4)
#define CAN_F13R1	REGISTER_32(CAN1_BASE + 0x2a8)
#define CAN_F13R2	REGISTER_32(CAN1_BASE + 0x2ac)
#define CAN_F14R1	REGISTER_32(CAN1_BASE + 0x2b0)
#define CAN_F14R2	REGISTER_32(CAN1_BASE + 0x2b4)
#define CAN_F15R1	REGISTER_32(CAN1_BASE + 0x2b8)
#define CAN_F15R2	REGISTER_32(CAN1_BASE + 0x2bc)
#define CAN_F16R1	REGISTER_32(CAN1_BASE + 0x2c0)
#define CAN_F16R2	REGISTER_32(CAN1_BASE + 0x2c4)
#define CAN_F17R1	REGISTER_32(CAN1_BASE + 0x2c8)
#define CAN_F17R2	REGISTER_32(CAN1_BASE + 0x2cc)
#define CAN_F18R1	REGISTER_32(CAN1_BASE + 0x2d0)
#define CAN_F18R2	REGISTER_32(CAN1_BASE + 0x2d4)
#define CAN_F19R1	REGISTER_32(CAN1_BASE + 0x2d8)
#define CAN_F19R2	REGISTER_32(CAN1_BASE + 0x2dc)
#define CAN_F20R1	REGISTER_32(CAN1_BASE + 0x2e0)
#define CAN_F20R2	REGISTER_32(CAN1_BASE + 0x2e4)
#define CAN_F21R1	REGISTER_32(CAN1_BASE + 0x2e8)
#define CAN_F21R2	REGISTER_32(CAN1_BASE + 0x2ec)
#define CAN_F22R1	REGISTER_32(CAN1_BASE + 0x2f0)
#define CAN_F22R2	REGISTER_32(CAN1_BASE + 0x2f4)
#define CAN_F23R1	REGISTER_32(CAN1_BASE + 0x2f8)
#define CAN_F23R2	REGISTER_32(CAN1_BASE + 0x2fc)
#define CAN_F24R1	REGISTER_32(CAN1_BASE + 0x300)
#define CAN_F24R2	REGISTER_32(CAN1_BASE + 0x304)
#define CAN_F25R1	REGISTER_32(CAN1_BASE + 0x308)
#define CAN_F25R2	REGISTER_32(CAN1_BASE + 0x30c)
#define CAN_F26R1	REGISTER_32(CAN1_BASE + 0x310)
#define CAN_F26R2	REGISTER_32(CAN1_BASE + 0x314)
#define CAN_F27R1	REGISTER_32(CAN1_BASE + 0x318)
#define CAN_F27R2	REGISTER_32(CAN1_BASE + 0x31c)


// I2C3
#define I2C3_CR1	REGISTER_32(I2C3_BASE + 0)
#define I2C3_CR2	REGISTER_32(I2C3_BASE + 4)
#define I2C3_OAR1	REGISTER_32(I2C3_BASE + 8)
#define I2C3_OAR2	REGISTER_32(I2C3_BASE + 0x0c)
#define I2C3_TIMINGR	REGISTER_32(I2C3_BASE + 0x10)
#define I2C3_TIMEOUTR	REGISTER_32(I2C3_BASE + 0x14)
#define I2C3_ISR	REGISTER_32(I2C3_BASE + 0x18)
#define I2C3_ICR	REGISTER_32(I2C3_BASE + 0x1c)
#define I2C3_PECR	REGISTER_32(I2C3_BASE + 0x20)
#define I2C3_RXDR	REGISTER_8(I2C3_BASE + 0x24)
#define I2C3_TXDR	REGISTER_8(I2C3_BASE + 0x28)



// I2C2
#define I2C2_CR1	REGISTER_32(I2C2_BASE + 0)
#define I2C2_CR2	REGISTER_32(I2C2_BASE + 4)
#define I2C2_OAR1	REGISTER_32(I2C2_BASE + 8)
#define I2C2_OAR2	REGISTER_32(I2C2_BASE + 0x0c)
#define I2C2_TIMINGR	REGISTER_32(I2C2_BASE + 0x10)
#define I2C2_TIMEOUTR	REGISTER_32(I2C2_BASE + 0x14)
#define I2C2_ISR	REGISTER_32(I2C2_BASE + 0x18)
#define I2C2_ICR	REGISTER_32(I2C2_BASE + 0x1c)
#define I2C2_PECR	REGISTER_32(I2C2_BASE + 0x20)
#define I2C2_RXDR	REGISTER_8(I2C2_BASE + 0x24)
#define I2C2_TXDR	REGISTER_8(I2C2_BASE + 0x28)

// I2C1
#define I2C1_CR1	REGISTER_32(I2C1_BASE + 0)
#define I2C1_CR2	REGISTER_32(I2C1_BASE + 4)
#define I2C1_OAR1	REGISTER_32(I2C1_BASE + 8)
#define I2C1_OAR2	REGISTER_32(I2C1_BASE + 0x0c)
#define I2C1_TIMINGR	REGISTER_32(I2C1_BASE + 0x10)
#define I2C1_TIMEOUTR	REGISTER_32(I2C1_BASE + 0x14)
#define I2C1_ISR	REGISTER_32(I2C1_BASE + 0x18)
#define I2C1_ICR	REGISTER_32(I2C1_BASE + 0x1c)
#define I2C1_PECR	REGISTER_32(I2C1_BASE + 0x20)
#define I2C1_RXDR	REGISTER_8(I2C1_BASE + 0x24)
#define I2C1_TXDR	REGISTER_8(I2C1_BASE + 0x28)




// USART5

#define USART5_CR1	REGISTER_32(USART5_BASE + 0)
#define USART5_CR2	REGISTER_32(USART5_BASE + 4)
#define USART5_CR3	REGISTER_32(USART5_BASE + 8)
#define USART5_BRR	REGISTER_32(USART5_BASE + 0x0c)
#define USART5_GTPR	REGISTER_32(USART5_BASE + 0x10)
#define USART5_RTOR	REGISTER_32(USART5_BASE + 0x14)
#define USART5_RQR	REGISTER_32(USART5_BASE + 0x18)
#define USART5_ISR	REGISTER_32(USART5_BASE + 0x1c)
#define USART5_ICR	REGISTER_32(USART5_BASE + 0x20)
#define USART5_RDR	REGISTER_32(USART5_BASE + 0x24)
#define USART5_TDR	REGISTER_32(USART5_BASE + 0x28)

// USART4


#define USART4_CR1	REGISTER_32(USART4_BASE + 0)
#define USART4_CR2	REGISTER_32(USART4_BASE + 4)
#define USART4_CR3	REGISTER_32(USART4_BASE + 8)
#define USART4_BRR	REGISTER_32(USART4_BASE + 0x0c)
#define USART4_GTPR	REGISTER_32(USART4_BASE + 0x10)
#define USART4_RTOR	REGISTER_32(USART4_BASE + 0x14)
#define USART4_RQR	REGISTER_32(USART4_BASE + 0x18)
#define USART4_ISR	REGISTER_32(USART4_BASE + 0x1c)
#define USART4_ICR	REGISTER_32(USART4_BASE + 0x20)
#define USART4_RDR	REGISTER_32(USART4_BASE + 0x24)
#define USART4_TDR	REGISTER_32(USART4_BASE + 0x28)



// USART3 
#define USART3_CR1	REGISTER_32(USART3_BASE + 0)
#define USART3_CR2	REGISTER_32(USART3_BASE + 4)
#define USART3_CR3	REGISTER_32(USART3_BASE + 8)
#define USART3_BRR	REGISTER_32(USART3_BASE + 0x0c)
#define USART3_GTPR	REGISTER_32(USART3_BASE + 0x10)
#define USART3_RTOR	REGISTER_32(USART3_BASE + 0x14)
#define USART3_RQR	REGISTER_32(USART3_BASE + 0x18)
#define USART3_ISR	REGISTER_32(USART3_BASE + 0x1c)
#define USART3_ICR	REGISTER_32(USART3_BASE + 0x20)
#define USART3_RDR	REGISTER_32(USART3_BASE + 0x24)
#define USART3_TDR	REGISTER_32(USART3_BASE + 0x28)



// USART2
#define USART2_CR1	REGISTER_32(USART2_BASE + 0)
#define USART2_CR2	REGISTER_32(USART2_BASE + 4)
#define USART2_CR3	REGISTER_32(USART2_BASE + 8)
#define USART2_BRR	REGISTER_32(USART2_BASE + 0x0c)
#define USART2_GTPR	REGISTER_32(USART2_BASE + 0x10)
#define USART2_RTOR	REGISTER_32(USART2_BASE + 0x14)
#define USART2_RQR	REGISTER_32(USART2_BASE + 0x18)
#define USART2_ISR	REGISTER_32(USART2_BASE + 0x1c)
#define USART2_ICR	REGISTER_32(USART2_BASE + 0x20)
#define USART2_RDR	REGISTER_32(USART2_BASE + 0x24)
#define USART2_TDR	REGISTER_32(USART2_BASE + 0x28)



// SPI3
#define SPI3_CR1	REGISTER_32(SPI3_BASE + 0)
#define SPI3_CR2	REGISTER_32(SPI3_BASE + 4)
#define SPI3_SR		REGISTER_32(SPI3_BASE + 8)
#define SPI3_DR		REGISTER_16(SPI3_BASE + 0x0c)
#define SPI3_DR8	REGISTER_8(SPI3_BASE + 0x0c)
#define SPI3_CRCPR	REGISTER_32(SPI3_BASE + 0x10)
#define SPI3_RXCRCR	REGISTER_32(SPI3_BASE + 0x14)
#define SPI3_TXCRCR	REGISTER_32(SPI3_BASE + 0x18)

// SPI2
#define SPI2_CR1	REGISTER_32(SPI2_BASE + 0)
#define SPI2_CR2	REGISTER_32(SPI2_BASE + 4)
#define SPI2_SR		REGISTER_32(SPI2_BASE + 8)
#define SPI2_DR		REGISTER_16(SPI2_BASE + 0x0c)
#define SPI2_DR8	REGISTER_8(SPI2_BASE + 0x0c)
#define SPI2_CRCPR	REGISTER_32(SPI2_BASE + 0x10)
#define SPI2_RXCRCR	REGISTER_32(SPI2_BASE + 0x14)
#define SPI2_TXCRCR	REGISTER_32(SPI2_BASE + 0x18)


// IWDG 
#define IWDG_KR 	REGISTER_32(IWDG_BASE + 0x00)
#define IWDG_PR 	REGISTER_32(IWDG_BASE + 0x04)
#define IWDG_RLR 	REGISTER_32(IWDG_BASE + 0x08)
#define IWDG_SR 	REGISTER_32(IWDG_BASE + 0x0c)
#define IWDG_WINR 	REGISTER_32(IWDG_BASE + 0x10)

// WWDG 
#define WWDG_CR 	REGISTER_32(WWDG_BASE + 0x00)
#define WWDG_CFR 	REGISTER_32(WWDG_BASE + 0x04)
#define WWDG_SR 	REGISTER_32(WWDG_BASE + 0x08)


// RTC
#define RTC_TR		REGISTER_32(RTC_BASE + 0x00)
#define RTC_DR		REGISTER_32(RTC_BASE + 0x04)
#define RTC_CR		REGISTER_32(RTC_BASE + 0x08)
#define RTC_ISR		REGISTER_32(RTC_BASE + 0x0c)
#define RTC_PRER	REGISTER_32(RTC_BASE + 0x10)
#define RTC_WUTR	REGISTER_32(RTC_BASE + 0x14)
#define RTC_ALRMAR	REGISTER_32(RTC_BASE + 0x1c)
#define RTC_ALRMBR	REGISTER_32(RTC_BASE + 0x20)
#define RTC_WPR		REGISTER_32(RTC_BASE + 0x24)
#define RTC_SSR		REGISTER_32(RTC_BASE + 0x28)
#define RTC_SHIFTR	REGISTER_32(RTC_BASE + 0x2c)
#define RTC_TSTR	REGISTER_32(RTC_BASE + 0x30)
#define RTC_TSDR	REGISTER_32(RTC_BASE + 0x34)
#define RTC_TSSSR	REGISTER_32(RTC_BASE + 0x38)
#define RTC_CALR	REGISTER_32(RTC_BASE + 0x3c)
#define RTC_TAMPCR	REGISTER_32(RTC_BASE + 0x40)
#define RTC_ALRMASSR	REGISTER_32(RTC_BASE + 0x44)
#define RTC_ALRMBSSR	REGISTER_32(RTC_BASE + 0x48)
#define RTC_OR	        REGISTER_32(RTC_BASE + 0x4c)
#define RTC_BKP0R       REGISTER_32(RTC_BASE + 0x50)
#define RTC_BKP1R       REGISTER_32(RTC_BASE + 0x54)
#define RTC_BKP2R       REGISTER_32(RTC_BASE + 0x58)
#define RTC_BKP3R       REGISTER_32(RTC_BASE + 0x5c)
#define RTC_BKP4R       REGISTER_32(RTC_BASE + 0x60)
#define RTC_BKP5R       REGISTER_32(RTC_BASE + 0x64)
#define RTC_BKP6R       REGISTER_32(RTC_BASE + 0x68)
#define RTC_BKP7R       REGISTER_32(RTC_BASE + 0x6c)
#define RTC_BKP8R       REGISTER_32(RTC_BASE + 0x70)
#define RTC_BKP9R       REGISTER_32(RTC_BASE + 0x74)
#define RTC_BKP10R      REGISTER_32(RTC_BASE + 0x78)
#define RTC_BKP11R      REGISTER_32(RTC_BASE + 0x7c)
#define RTC_BKP12R      REGISTER_32(RTC_BASE + 0x80)
#define RTC_BKP13R      REGISTER_32(RTC_BASE + 0x84)
#define RTC_BKP14R      REGISTER_32(RTC_BASE + 0x88)
#define RTC_BKP15R      REGISTER_32(RTC_BASE + 0x8c)
#define RTC_BKP16R      REGISTER_32(RTC_BASE + 0x90)
#define RTC_BKP17R      REGISTER_32(RTC_BASE + 0x94)
#define RTC_BKP18R      REGISTER_32(RTC_BASE + 0x98)
#define RTC_BKP19R      REGISTER_32(RTC_BASE + 0x9c)
#define RTC_BKP20R      REGISTER_32(RTC_BASE + 0xa0)
#define RTC_BKP21R      REGISTER_32(RTC_BASE + 0xa4)
#define RTC_BKP22R      REGISTER_32(RTC_BASE + 0xa8)
#define RTC_BKP23R      REGISTER_32(RTC_BASE + 0xac)
#define RTC_BKP24R      REGISTER_32(RTC_BASE + 0xb0)
#define RTC_BKP25R      REGISTER_32(RTC_BASE + 0xb4)
#define RTC_BKP26R      REGISTER_32(RTC_BASE + 0xb8)
#define RTC_BKP27R      REGISTER_32(RTC_BASE + 0xbc)
#define RTC_BKP28R      REGISTER_32(RTC_BASE + 0xc0)
#define RTC_BKP29R      REGISTER_32(RTC_BASE + 0xc4)
#define RTC_BKP30R      REGISTER_32(RTC_BASE + 0xc8)
#define RTC_BKP31R      REGISTER_32(RTC_BASE + 0xcc)

// LCD : slight deviation from naming convention in reference guide
#define LCD_CR          REGISTER_32(LCD_BASE + 0x00)
#define LCD_FCR         REGISTER_32(LCD_BASE + 0x04)
#define LCD_SR          REGISTER_32(LCD_BASE + 0x08)
#define LCD_CLR         REGISTER_32(LCD_BASE + 0x0c)
#define LCD_RAM1_COM0   REGISTER_32(LCD_BASE + 0x14)
#define LCD_RAM2_COM0   REGISTER_32(LCD_BASE + 0x18)
#define LCD_RAM1_COM1   REGISTER_32(LCD_BASE + 0x1c)
#define LCD_RAM2_COM1   REGISTER_32(LCD_BASE + 0x20)
#define LCD_RAM1_COM2   REGISTER_32(LCD_BASE + 0x24)
#define LCD_RAM2_COM2   REGISTER_32(LCD_BASE + 0x28)
#define LCD_RAM1_COM3   REGISTER_32(LCD_BASE + 0x2c)
#define LCD_RAM2_COM3   REGISTER_32(LCD_BASE + 0x30)
#define LCD_RAM1_COM4   REGISTER_32(LCD_BASE + 0x34)
#define LCD_RAM2_COM4   REGISTER_32(LCD_BASE + 0x38)
#define LCD_RAM1_COM5   REGISTER_32(LCD_BASE + 0x3c)
#define LCD_RAM2_COM5   REGISTER_32(LCD_BASE + 0x40)
#define LCD_RAM1_COM6   REGISTER_32(LCD_BASE + 0x44)
#define LCD_RAM2_COM6   REGISTER_32(LCD_BASE + 0x48)
#define LCD_RAM1_COM7   REGISTER_32(LCD_BASE + 0x4c)
#define LCD_RAM2_COM7   REGISTER_32(LCD_BASE + 0x50)



// TIM7 
#define TIM7_CR1	REGISTER_32(TIM7_BASE + 0)
#define TIM7_CR2	REGISTER_32(TIM7_BASE + 4)
#define TIM7_DIER	REGISTER_32(TIM7_BASE + 0x0c)
#define TIM7_SR	        REGISTER_32(TIM7_BASE + 0x10)
#define TIM7_EGR	REGISTER_32(TIM7_BASE + 0x14)
#define TIM7_CNT	REGISTER_32(TIM7_BASE + 0x24)
#define TIM7_PSC	REGISTER_32(TIM7_BASE + 0x28)
#define TIM7_ARR	REGISTER_32(TIM7_BASE + 0x2c)

// TIM6 
#define TIM6_CR1	REGISTER_32(TIM6_BASE + 0)
#define TIM6_CR2	REGISTER_32(TIM6_BASE + 4)
#define TIM6_DIER	REGISTER_32(TIM6_BASE + 0x0c)
#define TIM6_SR	        REGISTER_32(TIM6_BASE + 0x10)
#define TIM6_EGR	REGISTER_32(TIM6_BASE + 0x14)
#define TIM6_CNT	REGISTER_32(TIM6_BASE + 0x24)
#define TIM6_PSC	REGISTER_32(TIM6_BASE + 0x28)
#define TIM6_ARR	REGISTER_32(TIM6_BASE + 0x2c)



// TIM5
#define TIM5_CR1	REGISTER_16(TIM5_BASE + 0)
#define TIM5_CR2	REGISTER_16(TIM5_BASE + 4)
#define TIM5_SMCR	REGISTER_16(TIM5_BASE + 8)
#define TIM5_DIER	REGISTER_16(TIM5_BASE + 0x0c)
#define TIM5_SR		REGISTER_16(TIM5_BASE + 0x10)
#define TIM5_EGR	REGISTER_16(TIM5_BASE + 0x14)
#define TIM5_CCMR1	REGISTER_16(TIM5_BASE + 0x18)
#define TIM5_CCMR2	REGISTER_16(TIM5_BASE + 0x1c)
#define TIM5_CCER	REGISTER_16(TIM5_BASE + 0x20)
#define TIM5_CNT	REGISTER_16(TIM5_BASE + 0x24)
#define TIM5_PSC	REGISTER_16(TIM5_BASE + 0x28)
#define TIM5_ARR	REGISTER_16(TIM5_BASE + 0x2c)
#define TIM5_CCR1	REGISTER_16(TIM5_BASE + 0x34)
#define TIM5_CCR2	REGISTER_16(TIM5_BASE + 0x38)
#define TIM5_CCR3	REGISTER_16(TIM5_BASE + 0x3c)
#define TIM5_CCR4	REGISTER_16(TIM5_BASE + 0x40)
#define TIM5_DCR	REGISTER_16(TIM5_BASE + 0x48)
#define TIM5_DMAR	REGISTER_16(TIM5_BASE + 0x4c)
#define TIM5_OR1        REGISTER_16(TIM5_BASE + 0x50)
#define TIM5_OR2        REGISTER_16(TIM5_BASE + 0x60)


// TIM4
#define TIM4_CR1	REGISTER_16(TIM4_BASE + 0)
#define TIM4_CR2	REGISTER_16(TIM4_BASE + 4)
#define TIM4_SMCR	REGISTER_16(TIM4_BASE + 8)
#define TIM4_DIER	REGISTER_16(TIM4_BASE + 0x0c)
#define TIM4_SR		REGISTER_16(TIM4_BASE + 0x10)
#define TIM4_EGR	REGISTER_16(TIM4_BASE + 0x14)
#define TIM4_CCMR1	REGISTER_16(TIM4_BASE + 0x18)
#define TIM4_CCMR2	REGISTER_16(TIM4_BASE + 0x1c)
#define TIM4_CCER	REGISTER_16(TIM4_BASE + 0x20)
#define TIM4_CNT	REGISTER_16(TIM4_BASE + 0x24)
#define TIM4_PSC	REGISTER_16(TIM4_BASE + 0x28)
#define TIM4_ARR	REGISTER_16(TIM4_BASE + 0x2c)
#define TIM4_CCR1	REGISTER_16(TIM4_BASE + 0x34)
#define TIM4_CCR2	REGISTER_16(TIM4_BASE + 0x38)
#define TIM4_CCR3	REGISTER_16(TIM4_BASE + 0x3c)
#define TIM4_CCR4	REGISTER_16(TIM4_BASE + 0x40)
#define TIM4_DCR	REGISTER_16(TIM4_BASE + 0x48)
#define TIM4_DMAR	REGISTER_16(TIM4_BASE + 0x4c)
#define TIM4_OR1        REGISTER_16(TIM4_BASE + 0x50)
#define TIM4_OR2        REGISTER_16(TIM4_BASE + 0x60)


// TIM3
#define TIM3_CR1	REGISTER_16(TIM3_BASE + 0)
#define TIM3_CR2	REGISTER_16(TIM3_BASE + 4)
#define TIM3_SMCR	REGISTER_16(TIM3_BASE + 8)
#define TIM3_DIER	REGISTER_16(TIM3_BASE + 0x0c)
#define TIM3_SR		REGISTER_16(TIM3_BASE + 0x10)
#define TIM3_EGR	REGISTER_16(TIM3_BASE + 0x14)
#define TIM3_CCMR1	REGISTER_16(TIM3_BASE + 0x18)
#define TIM3_CCMR2	REGISTER_16(TIM3_BASE + 0x1c)
#define TIM3_CCER	REGISTER_16(TIM3_BASE + 0x20)
#define TIM3_CNT	REGISTER_16(TIM3_BASE + 0x24)
#define TIM3_PSC	REGISTER_16(TIM3_BASE + 0x28)
#define TIM3_ARR	REGISTER_16(TIM3_BASE + 0x2c)
#define TIM3_CCR1	REGISTER_16(TIM3_BASE + 0x34)
#define TIM3_CCR2	REGISTER_16(TIM3_BASE + 0x38)
#define TIM3_CCR3	REGISTER_16(TIM3_BASE + 0x3c)
#define TIM3_CCR4	REGISTER_16(TIM3_BASE + 0x40)
#define TIM3_DCR	REGISTER_16(TIM3_BASE + 0x48)
#define TIM3_DMAR	REGISTER_16(TIM3_BASE + 0x4c)
#define TIM3_OR1	REGISTER_16(TIM3_BASE + 0x50)
#define TIM3_OR2        REGISTER_16(TIM3_BASE + 0x60)

// TIM2
#define TIM2_CR1	REGISTER_16(TIM2_BASE + 0)
#define TIM2_CR2	REGISTER_16(TIM2_BASE + 4)
#define TIM2_SMCR	REGISTER_16(TIM2_BASE + 8)
#define TIM2_DIER	REGISTER_16(TIM2_BASE + 0x0c)
#define TIM2_SR		REGISTER_16(TIM2_BASE + 0x10)
#define TIM2_EGR	REGISTER_16(TIM2_BASE + 0x14)
#define TIM2_CCMR1	REGISTER_16(TIM2_BASE + 0x18)
#define TIM2_CCMR2	REGISTER_16(TIM2_BASE + 0x1c)
#define TIM2_CCER	REGISTER_16(TIM2_BASE + 0x20)
#define TIM2_CNT	REGISTER_16(TIM2_BASE + 0x24)
#define TIM2_PSC	REGISTER_16(TIM2_BASE + 0x28)
#define TIM2_ARR	REGISTER_16(TIM2_BASE + 0x2c)
#define TIM2_RCR	REGISTER_16(TIM2_BASE + 0x30)
#define TIM2_CCR1	REGISTER_16(TIM2_BASE + 0x34)
#define TIM2_CCR2	REGISTER_16(TIM2_BASE + 0x38)
#define TIM2_CCR3	REGISTER_16(TIM2_BASE + 0x3c)
#define TIM2_CCR4	REGISTER_16(TIM2_BASE + 0x40)
#define TIM2_BDTR	REGISTER_16(TIM2_BASE + 0x44)
#define TIM2_DCR	REGISTER_16(TIM2_BASE + 0x48)
#define TIM2_DMAR	REGISTER_16(TIM2_BASE + 0x4c)
#define TIM2_OR	        REGISTER_16(TIM2_BASE + 0x50)

// Core peripherals
#define STK_BASE	0xe000e010
#define SCB_BASE	0xe0000000
#define NVIC_BASE 	0xe000e100


// NVIC
#define ISER		REGISTER_32(NVIC_BASE + 0)
#define ICER		REGISTER_32(NVIC_BASE + 0x80)
#define ISPR		REGISTER_32(NVIC_BASE + 0x100)
#define ICPR		REGISTER_32(NVIC_BASE + 0x180)
#define IPR0		REGISTER_32(NVIC_BASE + 0x300)
#define IPR1		REGISTER_32(NVIC_BASE + 0x304)
#define IPR2		REGISTER_32(NVIC_BASE + 0x308)
#define IPR3		REGISTER_32(NVIC_BASE + 0x30c)
#define IPR4		REGISTER_32(NVIC_BASE + 0x310)
#define IPR5		REGISTER_32(NVIC_BASE + 0x314)
#define IPR6		REGISTER_32(NVIC_BASE + 0x318)
#define IPR7		REGISTER_32(NVIC_BASE + 0x31c)

// STK
#define STK_CSR		REGISTER_32(STK_BASE + 0)
#define STK_RVR		REGISTER_32(STK_BASE + 4)
#define STK_CVR		REGISTER_32(STK_BASE + 8)
#define STK_CALIB	REGISTER_32(STK_BASE + 0x0c)

// SCB
#define ACTLR		REGISTER_32(SCB_BASE + 0xe008)
#define CPUID		REGISTER_32(SCB_BASE + 0xed00)
#define ICSR		REGISTER_32(SCB_BASE + 0xed04)
#define VTOR		REGISTER_32(SCB_BASE + 0xed08)
#define AIRCR		REGISTER_32(SCB_BASE + 0xed0c)
#define SCR		REGISTER_32(SCB_BASE + 0xed10)
#define CCR		REGISTER_32(SCB_BASE + 0xed14)
#define SHPR2		REGISTER_32(SCB_BASE + 0xed1c)
#define SHPR3		REGISTER_32(SCB_BASE + 0xed20)
#define SHCSR		REGISTER_32(SCB_BASE + 0xed24)
#define DFSR		REGISTER_32(SCB_BASE + 0xed30)

#endif/*STM32L4_H*/
